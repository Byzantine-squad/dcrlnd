language: go
cache:
  directories:
    - $GOCACHE
    - $GOPATH/pkg/mod
    - $GOPATH/src/github.com/btcsuite
    - $GOPATH/src/github.com/golang
    - $GOPATH/src/gopkg.in/alecthomas

go:
<<<<<<< HEAD
  - "1.11.x"

=======
  - 1.8.5
  - 1.9.2
sudo: false
install:
  - GLIDE_TAG=v0.12.3
  - GLIDE_DOWNLOAD="https://github.com/Masterminds/glide/releases/download/$GLIDE_TAG/glide-$GLIDE_TAG-linux-amd64.tar.gz"
  - curl -L $GLIDE_DOWNLOAD | tar -xvz
  - export PATH=$PATH:$PWD/linux-amd64/
  - DCRD_VERSION=$(cat glide.yaml | grep -A1 dcrd | tail -n1 | awk '{ print $2}')
  - mkdir -p $GOPATH/src/github.com/decred/
  - pushd $GOPATH/src/github.com/decred/
  - git clone https://github.com/decred/dcrd
  - pushd dcrd
  - git checkout $DCRD_VERSION
  - glide install
  - go install . ./cmd/...
  - popd
  - popd
>>>>>>> Initial Decred port.
env:
  global:
    - GOCACHE=$HOME/.go-build
  matrix:
    - RACE=true
    - ITEST=true
    - COVER=true 

sudo: required
install:
  - sudo add-apt-repository -y ppa:bitcoin/bitcoin -y
  - sudo apt-get update -q
  - sudo apt-get install bitcoind -y
  - export PATH=$PATH:$PWD/linux-amd64/

script:
  - export GO111MODULE=on

  # Run unit tests with race condition detector.
  - 'if [ "$RACE" = true ]; then make travis-race ; fi'

  # Run integration tests.
  - 'if [ "$ITEST" = true ]; then make itest; fi'

  # Run unit tests and generate coverage report.
  - 'if [ "$COVER" = true ]; then make travis-cover; fi'

after_script:
  - echo "Uploading to termbin.com..." && find *.log | xargs -I{} sh -c "cat {} | nc termbin.com 9999 | xargs -r0 printf '{} uploaded to %s'"
  - echo "Uploading to file.io..." && tar -zcvO *.log | curl -s -F 'file=@-;filename=logs.tar.gz' https://file.io | xargs -r0 printf 'logs.tar.gz uploaded to %s\n'
